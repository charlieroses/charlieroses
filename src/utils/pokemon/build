#!/bin/bash

SRC="src/pokemon"
UTILS="src/utils/pokemon"
HTML_SRC="pokemon"
TCG_SRC="${SRC}/cards"

RED="\e[01;31m"
YELLOW="\e[01;33m"
GREEN="\e[01;32m"
CLEAR="\e[0m"
ALL=""
WARNING=""

while getopts "aw" opt
do
	case "${opt}" in
		a)
			ALL="-a"
			;;
		w)
			WARNING="-w"
			;;
	esac
done

TEMPLATE="$(cat "${UTILS}/template.html")"
NAV="$(tail -n +2 "${SRC}/series.tsv" | awk -f "${UTILS}/nav_links.awk")"
TEMPLATE="${TEMPLATE/"<!-- NAVIGATION -->"/"${NAV}"}"
MENUCONTENT=""

function fileid {
	echo "$1" | tr -dc "[:alnum:]" | tr "[:upper:]" "[:lower:]"
}

while IFS= read LINE
do
	SRNAME="$(echo "${LINE}" | cut -d$'\t' -f1)"
	MNTHST="$(echo "${LINE}" | cut -d$'\t' -f2)"
	YEARST="$(echo "${LINE}" | cut -d$'\t' -f3)"
	MNTHFN="$(echo "${LINE}" | cut -d$'\t' -f4)"
	YEARFN="$(echo "${LINE}" | cut -d$'\t' -f5)"
	PROMOS="$(echo "${LINE}" | cut -d$'\t' -f6)"

	SRFILE="${SRC}/$(fileid "${SRNAME}")_sets.tsv"
	
	if [[ ! -f "${SRFILE}" ]]
	then
		echo -e "${RED}ERROR:${CLEAR} ${SRFILE} does not exist"
		continue
	fi


	MENUCONTENT="${MENUCONTENT}<h2 id=\"$(fileid "${SRNAME}")\">${SRNAME}</h2>\n"
	MENU_BS=""
	if [[ -n "$PROMOS" ]]
	then
		PROMOLINES="$(awk -F$'\t' "NR>1 && \$8 == \"${PROMOS}\"" "${TCG_SRC}/promo.tsv" )"
		if [[ "$(echo "${PROMOLINES}" | wc -l)" = "0" ]]
		then
			MENU_BS="${SRNAME}\t\t\t\t0\tBlack Star Promos\t"
		else
			MENU_BS="${SRNAME}\t\t\t\t\tBlack Star Promos\t"
			SET_TSV="${TCG_SRC}/promo.tsv"
			SET_HTML="$(fileid "${SRNAME}")_$(fileid "Black Star Promos").html"
			
			if [[ -n "${ALL}" ]] ||
			   [[ ! -e "${HTML_SRC}/${SET_HTML}" ]] ||
			   [[ "${HTML_SRC}/${SET_HTML}" -ot "${SET_TSV}" ]]
			then
				SET_TABLE="$(echo "${PROMOLINES}" | awk -f "${UTILS}/blackstarpromo_table.awk" "${PROMOS}" )"
				HTML_CONTENT="<h2>Black Star Promos - ${SRNAME}</h2>\n<br>\n<hr>\n${SET_TABLE}"
				HTML_PAGE="${TEMPLATE/<!-- CONTENT -->/"${HTML_CONTENT}"}"
				echo -e "${HTML_PAGE}" > "${HTML_SRC}/${SET_HTML}"
				echo -e "${GREEN}Built ${SRNAME} Black Star Promos${CLEAR}"
			fi
		fi
	fi

	while IFS= read LINE
	do
		SET_NAME="$(echo "${LINE}" | cut -d$'\t' -f1)"
		SET_YEAR="$(echo "${LINE}" | cut -d$'\t' -f2)"
		SET_COUNT="$(echo "${LINE}" | cut -d$'\t' -f3)"
		SET_TOTAL="$(echo "${LINE}" | cut -d$'\t' -f4)"
		SET_COMPLETE="$(echo "${LINE}" | cut -d$'\t' -f5)"
		SET_SUBSET="$(echo "${LINE}" | cut -d$'\t' -f6)"
		SET_SPECIAL="$(echo "${LINE}" | cut -d$'\t' -f7)"
	
		SET_FNAME="$(fileid "${SET_NAME}")"
		SUBSET_FNAME="${SET_FNAME}"
		[[ -n "${SET_SUBSET}" ]] && SUBSET_FNAME="${SET_FNAME}_$(fileid "${SET_SUBSET}")"
		if [[ "${SET_SUBSET}" = "Base Set" ]]
		then
			[[ -n "${MENU_BS}" ]] && MENU_BS="${MENU_BS}\n"
			MENU_BS="${MENU_BS}${LINE}"
		fi

		SET_TSV="${TCG_SRC}/${SUBSET_FNAME}.tsv"
		SET_IMG="images/seticons/${SET_FNAME}.png"
		SET_TITLEIMG="images/settitles/${SET_FNAME}.png"
		SET_HTML="${SUBSET_FNAME}.html"

		if [[ ! -e "${HTML_SRC}/${SET_IMG}" ]]
		then
			echo -e "${RED}ERROR:${CLEAR} No Set Img for ${SET_NAME}"
			continue
		fi
		if [[ ! -f "${SET_TSV}" ]]
		then
			[[ -n "${WARNING}" ]] && echo -e "${YELLOW}WARNING:${CLEAR} ${SET_TSV} does not exist"
			continue
		fi
		if [[ "$(tail -n +2 "${SET_TSV}" | wc -l)" = "0" ]]
		then
			[[ -n "${WARNING}" ]] && echo -e "${YELLOW}WARNING:${CLEAR} ${SET_TSV} has no cards"
			continue
		fi

		if [[ ! -e "${HTML_SRC}/${SET_TITLEIMG}" ]]
		then
			echo -e "${RED}ERROR:${CLEAR} No Set Title Img for ${SET_NAME}"
			continue
		fi

		ERRORS="$(awk -f "${UTILS}/validate_set.awk" "${SET_TSV}")"
		EXIT="$?"
		if [[ "${EXIT}" == 2 ]]
		then
			echo -e "${RED}ERROR:${CLEAR} Invalid TSV for ${SET_NAME}"
			echo "${ERRORS}" | sed 's/^/\t/'
			continue
		elif [[ "${EXIT}" == 1 ]] &&
		     [[ -n "${WARNING}" ]]
		then
			echo -e "${YELLOW}WARNING:${CLEAR} Potential Errors in TSV for ${SET_NAME}"
			echo "${ERRORS}" | sed 's/^/\t/'
		fi

		if [[ -z "${ALL}" ]] &&
		   [[ -e "${HTML_SRC}/${SET_HTML}" ]] &&
		   [[ "${HTML_SRC}/${SET_HTML}" -nt "${SET_TSV}" ]]
		then
			continue
		fi
	
		SET_TABLE="$(awk -f "${UTILS}/set_table.awk" "${SET_TSV}" "${SET_COUNT}")"
	
		HTML_CONTENT="<img src=\"${SET_TITLEIMG}\" id=\"set_title_img\">\n<br>\n<hr>\n"
		HTML_CONTENT="${HTML_CONTENT}${SET_TABLE}"
	
		HTML_PAGE=${TEMPLATE}
		HTML_PAGE="${HTML_PAGE/<!-- CONTENT -->/${HTML_CONTENT}}"
		echo -e "${HTML_PAGE}" > "${HTML_SRC}/${SET_HTML}"
	
		echo -e "${GREEN}Built ${SET_NAME}${CLEAR}"
	done < <(tail -n +2 "${SRFILE}" | sort)
	
	[[ -n "${MENU_BS}" ]] && MENUCONTENT="${MENUCONTENT}$(echo -e "${MENU_BS}" | awk -f "${UTILS}/build_menu.awk" "2" )"
	MENU_EXP="$(tail -n +2 "${SRFILE}" | grep -v "\WBase Set\W" | sort | awk -f "${UTILS}/build_menu.awk" 4 )"
	MENUCONTENT="${MENUCONTENT}${MENU_EXP}"
	MENUCONTENT="${MENUCONTENT}<br>\n<hr>\n"
done < <(tail -n +2 "${SRC}/series.tsv")


INDEX="${TEMPLATE}"
INDEX="${INDEX/<!-- CONTENT -->/${MENUCONTENT}}"

echo -e "${INDEX}" > "${HTML_SRC}/index.html"

