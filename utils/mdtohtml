#!/bin/bash
# Fixing the things I don't like about pandoc

# Proper argument parsing is an issue for another day. For the time being, the
# only argument is the string being manipulated
#
# Oh this is hideous

CONTENT="$1"

################################################################################
#                                  Foot Notes                                  #
################################################################################

FN_DIV="<div class=\"footnotes\">"
FL_CURR="class=\"footnoteRef\" id=\"fnref[0-9]+\"><sup>[0-9]+</sup></a>"

if grep -q "${FN_DIV}" <<< "${CONTENT}"
then
	while IFS= read -r FL_C
	do
		FL_N="${FL_C/<sup>/[}"
		FL_N="${FL_N/<\/sup>/]}"
		CONTENT=${CONTENT/"${FL_C}"/"${FL_N}"}
	done < <(grep -Eo "${FL_CURR}" <<< "$CONTENT")

	FN_DIV_C=${CONTENT##*${FN_DIV}}
	FN_DIV_N=${FN_DIV_C}
	FN_DIV_N=${FN_DIV_N/"<ol>"/}
	FN_DIV_N=${FN_DIV_N/"<\/ol>"/}
	FN_DIV_N=${FN_DIV_N//"<\/li>"/}
	FN_DIV_N=${FN_DIV_N//"<p>"/}
	FN_DIV_N="$(echo "${FN_DIV_N}" | sed -r 's/<li id=\"fn([0-9]*)\">/<p><span id=\"fn\1\">[\1]: <\/span>/g')"
	FN_DIV_N=${FN_DIV_N//"â†©"/" [^]"}

	CONTENT=${CONTENT/"${FN_DIV_C}"/"${FN_DIV_N}"}
fi

################################################################################
#                                 PsuedoCode                                   #
################################################################################

PS_DIV="<pre class=\"psuedo\">"
HTML_SPACE="<span class=\"space\">.</span>"
HTML_TAB="<span class=\"tab\">>---</span>"
HTML_NL="<br>"

KEYWORDS="if fi then else for rof while elihw do to done fun end and or"

if grep -q "${PS_DIV}" <<< "${CONTENT}"
then
	while IFS= read -r PS_C
	do
		# Isolate the content of each DIV from the tags that contain them
		DIV="${CONTENT##*${PS_C%%</code>*}}"
		DIV="${DIV%%</code>*}"
		DIV="${PS_C##*${PS_DIV}}$DIV"
		DIV="${DIV##*<code>}"
		DIV="${DIV%%</code>*}"

		OLD_DIV="${PS_DIV}<code>${DIV}</code></pre>"

		# Color strings
		DIV=$(echo "$DIV" | sed "s/^\(.*\)\(\".*\"\)\(.*\)$/\1<span class=\"string\">\2<\/span>\3/g" )
	
		# Style comments
		DIV=$(echo "$DIV" | sed "s/\(\/\/.*\)$/<span class=\"comment\">\1<\/span>/g" )

		# Style function names
		while IFS= read -r REF
		do
			FUNNAME="${REF%%(*}"
			FUNNAME="${FUNNAME##* }"
			DIV="${DIV//$FUNNAME/<span class=\"funname\">$FUNNAME</span>}"
		done < <(grep "fun" <<< "$DIV")

		# Highlight keywords
		for kw in $KEYWORDS
		do
			DIV=$(echo "$DIV" | sed "s/^\($kw\)/<span class=\"\1\">\1<\/span>/g" )
			DIV=$(echo "$DIV" | sed "s/\($kw\)$/<span class=\"\1\">\1<\/span>/g" )
			DIV=$(echo "$DIV" | sed "s/\([[:space:]]\)\($kw\)\([[:space:]]\)/\1<span class=\"\2\">\2<\/span>\3/g" )
		done
	
		# Add line numbers
		NL=""
		ln="$(echo "$DIV" | wc -l)"
		i=0
		while IFS= read -r LINE
		do
			(( i++ ))
			n=$(( $(echo $ln | wc -c) - $(echo "$i" | wc -c) ))
			p=""
			for ((j = 0; j < n; j++ ))
			do
				p="${HTML_SPACE}${p}"
			done

			LINE=${LINE//$'\t'/${HTML_TAB}}
			LINE="${p}${i} : ${LINE}"
			NL="${NL}${HTML_NL}${LINE}"

		done <<< "$DIV"

		DIV="<div class=\"psuedo\">${NL#<br>}</div>"

		CONTENT=${CONTENT/"$OLD_DIV"/"$DIV"}

	done < <(grep -E "${PS_DIV}" <<< "${CONTENT}")
fi


################################################################################
#                                   Hex Codes                                  #
################################################################################

CONTENT=$(echo "$CONTENT" | sed "s/HC#\([[:digit:]].[[:digit:]].[[:digit:]].\)#/<span class=\"hexcode-w\" style=\"background-color: #\1;\">#\1<\/span>/g")
CONTENT=$(echo "$CONTENT" | sed "s/HC#\([[a-f]].[[a-f]].[[a-f]].\)#/<span class=\"hexcode-b\" style=\"background-color: #\1;\">#\1<\/span>/g")

echo "$CONTENT"


